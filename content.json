{"meta":{"title":"Finsos","subtitle":null,"description":null,"author":"Fin","url":"http://finsos.github.io"},"pages":[{"title":"书单","date":"2018-01-17T15:18:09.384Z","updated":"2017-11-12T10:22:01.000Z","comments":false,"path":"books/index.html","permalink":"http://finsos.github.io/books/index.html","excerpt":"","text":""},{"title":"404 Not Found：该页无法显示","date":"2018-01-17T15:18:09.380Z","updated":"2017-11-12T10:22:01.000Z","comments":false,"path":"/404.html","permalink":"http://finsos.github.io//404.html","excerpt":"","text":""},{"title":"分类","date":"2018-01-17T15:18:09.385Z","updated":"2017-11-12T10:22:01.000Z","comments":false,"path":"categories/index.html","permalink":"http://finsos.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-01-17T15:18:09.386Z","updated":"2017-11-12T10:22:01.000Z","comments":true,"path":"links/index.html","permalink":"http://finsos.github.io/links/index.html","excerpt":"","text":""},{"title":"关于","date":"2018-01-17T15:18:09.383Z","updated":"2017-11-12T10:22:01.000Z","comments":false,"path":"about/index.html","permalink":"http://finsos.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"Repositories","date":"2018-01-17T15:18:09.387Z","updated":"2017-11-12T10:22:01.000Z","comments":false,"path":"repository/index.html","permalink":"http://finsos.github.io/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-01-17T15:18:09.388Z","updated":"2017-11-12T10:22:01.000Z","comments":false,"path":"tags/index.html","permalink":"http://finsos.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"准备开始 深度学习","slug":"进军深度学习","date":"2018-02-26T14:11:01.614Z","updated":"2018-03-20T14:40:20.990Z","comments":true,"path":"2018/02/26/进军深度学习/","link":"","permalink":"http://finsos.github.io/2018/02/26/进军深度学习/","excerpt":"","text":"一直写了没有发出， 拖沓症真的挺严重。。。 进军深度学习课程近期看了一些关于人工智能系列的文章，对这种前沿的技术充满了兴趣，但是苦于上学时候没有好好学习😂，所以想补充一下数学基础知识。学习的过程中顺便温习了一下解方程 目前看的数学书籍 线性代数 看了前面几章，了解了下向量的概念，以及矩阵的概念。其次，就是解方程组。 又是一两个月没看了，忘得差不多了，唉 离散数学 暂时搁置 简单数学示例12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364#!/bin/env python#-*-encoding: utf8-*-#python解一元方程&apos;&apos;&apos;usag: simple.py number power symbolnotice: please input full args.args: number - you can input any numbers. power - it&apos;s a power for number like 3^2, the 2 is 3&apos;power. symbol - the math symbol like +,-,*,/&apos;&apos;&apos;import osimport stringdef quadratic(number, power, symbol): i = 1 result = [] text = [] while True: calc_text = str(pow(number, power)) + &apos; &apos; + symbol + &apos; &apos; + str(pow((number - i), power)) calc_result = eval(calc_text) i += 1 if calc_result &lt; 0: print (u&apos;no solution!&apos;) continue if i &gt; number: break result.append(calc_result) text.append(calc_text) return result, text if __name__ == &apos;__main__&apos;: try: number = os.sys.argv[1] power = os.sys.argv[2] symbol = os.sys.argv[3] number = int(number) power = int(power) symbol = str(symbol) symbol_standard = &apos;+-*/&apos; symbol_sense = string.find(symbol_standard, symbol) != -1 if not (isinstance(number,int) and isinstance(power,int) and symbol_sense): print (__doc__) os.sys.exit(1) except Exception: print (__doc__) os.sys.exit(1) (result,text) = quadratic(number, power, symbol) i = 0 total = int() for i in range(len(text)): total += result[i] print (&apos;%s = %s&apos; % (text[i], result[i])) i += 1 if i &gt; len(text): break print (&apos;total: %s \\nlength: %s \\naverage: %s&apos; % (total, len(text), round(total/len(text))))","categories":[{"name":"深度学习","slug":"深度学习","permalink":"http://finsos.github.io/categories/深度学习/"}],"tags":[{"name":"Python,文笔随记","slug":"Python-文笔随记","permalink":"http://finsos.github.io/tags/Python-文笔随记/"}]},{"title":"centos搭建局域网repo源","slug":"centos搭建本地repo源","date":"2018-01-20T05:35:41.000Z","updated":"2018-01-20T15:20:47.157Z","comments":true,"path":"2018/01/20/centos搭建本地repo源/","link":"","permalink":"http://finsos.github.io/2018/01/20/centos搭建本地repo源/","excerpt":"","text":"起初是因为有些时候需要安装的一些包总是在系统自带的repo仓库找不到，有些国外的源又很慢，自己本地都要下载很长时间，偶尔又有一些依赖缺失之类的，干脆就把自己工作环境中所需要的包存起来，自己建一个内网仓库，于是有了下面这篇文章。 依赖 安装httpd服务或者nginx服务。#省略 一些目录设定 DocumentRoot: /var/www/html RepoDirectory: /var/www/html/HDP-UTILS-1.1.0.21 脚本目录： /etc/init.d 下载需要的RPM 进入DocumentRoot，将下载的rpm包copy至该目录 或者直接从已有源地址仓库下载： 12#下载该目录下所有文件wget -c -r -np -P /var/www/html http://hdp.domain/HDP-UTILS-1.1.0.21 解释一下wget命令的用法： 12345-c 断点续传-r 递归下载-np 不下载父附录-nd 不建立目录，若无此选项，将按照网站目录结构创建目录-P 将下载的所有内容存放到指定目录 使用createrepo命令创建repo信息 安装createrepo 12#一般centos自带的yum仓库就有yum install -y createrepo 执行命令创建repo 12#初始化源,生成repodata元数据,保存在RepoDirectorycreaterepo --workers=2 -pdo /var/www/html/HDP-UTILS-1.1.0.21 /var/www/html/HDP-UTILS-1.1.0.21 -c /tmp/HDP-UTILS-1.1.0.21 -v 解释一下createrepo命令： 12345-p 以漂亮的格式输出xml-d 使用sqlite存储生成的元数据，默认项-o 指定元数据的输出位置-c 指定缓存目录，缓存软件仓库中软件包的校验和信息-v 以详细模式输出 启动http服务 启动服务以供其他机器访问1/etc/init.d/httpd restart 创建客户端使用的repo文件12345678cat /etc/yum.repos.d/HDP-UTILS.repo &lt;&lt;EOF #VERSION_NUMBER=1.1.0.21 [HDP-UTILS-1.1.0.21] name=HDP-UTILS-1.1.0.21 baseurl=http://local.network.domain/HDP-UTILS-1.1.0.21/ gpgcheck=0 enabled=1EOF 访问测试 浏览器访问[http://local.network.domain/HDP-UTILS-1.1.0.21/] 客户端服务器使用命令 yum repolist|grep “HDP-UTILS-1.1.0.21” 看能否获取到正确的repo和文件数量","categories":[{"name":"Linxu运维","slug":"Linxu运维","permalink":"http://finsos.github.io/categories/Linxu运维/"}],"tags":[{"name":"repo仓库","slug":"repo仓库","permalink":"http://finsos.github.io/tags/repo仓库/"}]},{"title":"写在第一篇文章的话","slug":"写在第一篇文章的话","date":"2018-01-19T15:23:44.000Z","updated":"2018-01-20T15:27:39.122Z","comments":true,"path":"2018/01/19/写在第一篇文章的话/","link":"","permalink":"http://finsos.github.io/2018/01/19/写在第一篇文章的话/","excerpt":"","text":"博客开张了，The first blood还是要贡献一下，接触博客好多，今天算是第一次完全搭建属于自己的个人博客，也是无意间接触到GitHub Pages，觉得很方便，而且完美支持Markdown，就这么选好模板入坑了。 写在第一篇文章的话这个博客，主要是用于记录自己的学习过程，以及工作中所踩的一些新坑，包括自己脑子记不住的知识点(大家都懂的^_^)! 其实偶尔也会有一些自己的心情体会发表一下，主要是吐槽啦~ 为什么开博客 希望养成良好的个人习惯 技术更新迭代很快，对我这种战5渣的冲击力太大，必须时刻提醒自己要思（挣）考（钱）！要学（高）习（薪）！ 不定时更新，自己满足就好，当然，如果文章中有涉及到可以帮助大家的知识点，我也是很开心啦啦啦~ 我是什么人 目前一名普通的Linux运维（民工） 接触了一些貌似高大山的东西，消息队列、分布式计算、分布式存储、虚拟化、自动化运维、DevOps 等等 对于上面那些平时光说，光听，实际原理其实并没有吃透，纯粹操作一点，学会一点，其实然并卵。 本篇完 有点晚了，需要睡觉了，想起来再说。","categories":[{"name":"文笔随记","slug":"文笔随记","permalink":"http://finsos.github.io/categories/文笔随记/"}],"tags":[{"name":"心情","slug":"心情","permalink":"http://finsos.github.io/tags/心情/"}]}]}