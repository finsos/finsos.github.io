{"pages":[{"title":"Categories","date":"2018-07-28T02:53:57.789Z","path":"categories/index.html","text":""},{"title":"About","date":"2018-07-28T10:53:32.616Z","path":"about/index.html","text":"作者介绍 座右铭：人生苦短，珍惜时间 兴趣爱好： 计算机、摄影、旅游、美食 工作状态： 就业中 关注领域： WEB开发，大数据，机器学习，架构运维 GET技能 前端： JavaScript、Html5、VueJs Python：Flask框架，标准库 Linux： Shell脚本，command 大数据：Kafka、Zookeeper、Hbase、HDFS、Elasticsearch、Mongodb FQA 平常学习都比较零散，刚好用博客做一下记录 不定时更新，想到就写点吧~"},{"title":"Tags","date":"2018-07-28T02:53:57.792Z","path":"tags/index.html","text":""}],"posts":[{"title":"Welcome to luke's wiki site!","date":"2018-07-28T14:17:42.534Z","path":"wiki/index/","text":"导语这只是个人知识站点，主要用于记录平时一些知识碎片，同时也方便自己今后查阅，内容不限定，有时间就更新。 大概理一下主要内容： 平时学习前沿的技术，做个知识积累 学习成果，开发的一些工具之类 工作中踩过的坑，既然填坑了，那就铺条路出来 生活中的琐碎心情 推荐的书籍，阅读心得 互联网资讯类，新鲜事儿 电影音乐类，毕竟我爱电视剧，😁 摄影类，美丽的事物赏心悦目 事情比较杂，但是主要是专心于技术，学习，提升自我。 结束最后来张图，大家共勉。 凛冬已至，还不赶紧逼自己一把。","tags":[],"categories":[]},{"title":"Elasticsearch快照备份","date":"2018-07-28T14:04:58.090Z","path":"wiki/Elasticsearch快照备份/","text":"版本信息 ElasticSearch: 5.3.0JDK: 1.8OS: CentOS release 6.8 (Final) 修改bin/elasticsearch-plugin（如plugin命令不可用） 使用ansible-elasticsearch这个playbook安装会存在此问题 12# For a distribution package, the value is \"/etc/sysconfig/elasticsearch\".ES_ENV_FILE=\"/etc/sysconfig/这里修改为实际的配置文件名\" 安装repository-hdfs插件 安装命令 12cd /usr/share/elasticsearch/bin./elasticsearch-plugin install repository-hdfs 修改配置plugin-security.policy(5.3版本bug) Q: 创建快照时会报错 1java.security.AccessControlException: access denied (\"javax.security.auth.PrivateCredentialPermission\" \"org.apache.hadoop.security.Credentials\" \"read\") A: 修复报错 12345678910111213141516# 修改 ../plugins/repository-hdfs/plugin-security.policy# 增加如下： permission java.lang.RuntimePermission \"accessDeclaredMembers\"; permission java.lang.RuntimePermission \"getClassLoader\"; permission java.lang.RuntimePermission \"shutdownHooks\"; permission java.lang.reflect.ReflectPermission \"suppressAccessChecks\"; permission javax.security.auth.AuthPermission \"doAs\"; permission javax.security.auth.AuthPermission \"getSubject\"; permission javax.security.auth.AuthPermission \"modifyPrivateCredentials\"; permission java.security.AllPermission; permission java.util.PropertyPermission \"*\", \"read,write\"; permission javax.security.auth.PrivateCredentialPermission \"org.apache.hadoop.security.Credentials * \\\"*\\\"\", \"read\"; # 修改Elastic配置目录下jvm.options# 指定权限文件-Djava.security.policy=file:///usr/share/elasticsearch/plugins/repository-hdfs/plugin-security.policy 重启ES服务加载插件1/etc/init.d/elasticsearch restart 利用快照API备份 在hdfs上创建备份目录授权 123hadoop fs -mkdir /es_backup#要求es用户可读写hadoop fs -chown elasticsearch:elasticsearch /es_backup 创建仓库 123456789101112131415161718PUT /_snapshot/my_backup &#123; \"type\": \"hdfs\", \"settings\": &#123; \"path\": \"/es_backup\", \"load_defaults\": \"true\", \"compress\": \"true\", \"uri\": \"hdfs://172.26.33.55:8020\" &#125; &#125;# 查看仓库信息GET /_snapshot/my_backup# 删除仓库DELETE /_snapshot/my_backup# 此时查看HDFS上的文件hadoop fs -ls /es_backuphadoop fs -cat /es_backup/index-0 创建快照 12345678910PUT /_snapshot/my_backup/snapshot_1?wait_for_completion=true &#123; \"indices\": \"index_1,index_2\", //不设置这个属性，默认备份所有index \"ignore_unavailable\": true, \"include_global_state\": false &#125;# 查看快照信息，支持通配符GET _snapshot/my_backup/snapshot_1# 删除快照，这里只是es的引用删除，hdfs中的文件并不会删除DELETE _snapshot/my_backup/snapshot_1 恢复快照 1234567891011POST /_snapshot/my_backup/snapshot_1/_restore &#123; \"indices\": \"index_1,index_2\", //指定索引恢复，不指定就是所有 \"ignore_unavailable\": true, //忽略恢复时异常索引 \"include_global_state\": false, //是否存储全局转态信息,fasle代表有一个或几个失败，不会导致整个任务失败 \"rename_pattern\": \"index_(.+)\", //是否需要重命名索引 \"rename_replacement\": \"restored_index_$1\" //替换后的索引名 &#125;# 监控恢复情况GET restored_index_1/_recovery","tags":[{"name":"elasticsearch","slug":"elasticsearch","permalink":"http://finsos.github.io/tags/elasticsearch/"}],"categories":[{"name":"Elasticsearch","slug":"Elasticsearch","permalink":"http://finsos.github.io/categories/Elasticsearch/"}]},{"title":"setup模块过滤多个返回参数","date":"2018-07-28T14:00:42.348Z","path":"wiki/setup模块过滤多个返回参数/","text":"一句话命令 使用setup模块过滤多个返回参数，这里用到了jq来解析返回的json数据ansible hosts -m setup | sed &#39;s/.*=&gt;//g&#39;|jq &#39;.ansible_facts|{ip: .ansible_default_ipv4.address, version: .ansible_distribution_version}&#39;","tags":[{"name":"ansible","slug":"ansible","permalink":"http://finsos.github.io/tags/ansible/"}],"categories":[{"name":"运维记录","slug":"运维记录","permalink":"http://finsos.github.io/categories/运维记录/"},{"name":"ansible","slug":"运维记录/ansible","permalink":"http://finsos.github.io/categories/运维记录/ansible/"}]},{"title":"准备开始 深度学习","date":"2018-02-26T14:11:01.614Z","path":"wiki/进军深度学习/","text":"一直写了没有发出， 拖沓症真的挺严重。。。 进军深度学习课程近期看了一些关于人工智能系列的文章，对这种前沿的技术充满了兴趣，但是苦于上学时候没有好好学习😂，所以想补充一下数学基础知识。学习的过程中顺便温习了一下解方程 目前看的数学书籍 线性代数 看了前面几章，了解了下向量的概念，以及矩阵的概念。其次，就是解方程组。 又是一两个月没看了，忘得差不多了，唉 离散数学 暂时搁置 简单数学示例12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364#!/bin/env python#-*-encoding: utf8-*-#python解一元方程'''usag: simple.py number power symbolnotice: please input full args.args: number - you can input any numbers. power - it's a power for number like 3^2, the 2 is 3'power. symbol - the math symbol like +,-,*,/'''import osimport stringdef quadratic(number, power, symbol): i = 1 result = [] text = [] while True: calc_text = str(pow(number, power)) + ' ' + symbol + ' ' + str(pow((number - i), power)) calc_result = eval(calc_text) i += 1 if calc_result &lt; 0: print (u'no solution!') continue if i &gt; number: break result.append(calc_result) text.append(calc_text) return result, text if __name__ == '__main__': try: number = os.sys.argv[1] power = os.sys.argv[2] symbol = os.sys.argv[3] number = int(number) power = int(power) symbol = str(symbol) symbol_standard = '+-*/' symbol_sense = string.find(symbol_standard, symbol) != -1 if not (isinstance(number,int) and isinstance(power,int) and symbol_sense): print (__doc__) os.sys.exit(1) except Exception: print (__doc__) os.sys.exit(1) (result,text) = quadratic(number, power, symbol) i = 0 total = int() for i in range(len(text)): total += result[i] print ('%s = %s' % (text[i], result[i])) i += 1 if i &gt; len(text): break print ('total: %s \\nlength: %s \\naverage: %s' % (total, len(text), round(total/len(text))))","tags":[{"name":"python","slug":"python","permalink":"http://finsos.github.io/tags/python/"}],"categories":[{"name":"文笔随记","slug":"文笔随记","permalink":"http://finsos.github.io/categories/文笔随记/"},{"name":"向往","slug":"文笔随记/向往","permalink":"http://finsos.github.io/categories/文笔随记/向往/"}]},{"title":"centos搭建局域网repo源","date":"2018-01-20T05:35:41.000Z","path":"wiki/centos搭建本地repo源/","text":"起初是因为有些时候需要安装的一些包总是在系统自带的repo仓库找不到，有些国外的源又很慢，自己本地都要下载很长时间，偶尔又有一些依赖缺失之类的，干脆就把自己工作环境中所需要的包存起来，自己建一个内网仓库，于是有了下面这篇文章。 依赖 安装httpd服务或者nginx服务。#省略 一些目录设定 DocumentRoot: /var/www/html RepoDirectory: /var/www/html/HDP-UTILS-1.1.0.21 脚本目录： /etc/init.d 下载需要的RPM 进入DocumentRoot，将下载的rpm包copy至该目录 或者直接从已有源地址仓库下载： 12#下载该目录下所有文件wget -c -r -np -P /var/www/html http://hdp.domain/HDP-UTILS-1.1.0.21 解释一下wget命令的用法： 12345-c 断点续传-r 递归下载-np 不下载父附录-nd 不建立目录，若无此选项，将按照网站目录结构创建目录-P 将下载的所有内容存放到指定目录 使用createrepo命令创建repo信息 安装createrepo 12#一般centos自带的yum仓库就有yum install -y createrepo 执行命令创建repo 12#初始化源,生成repodata元数据,保存在RepoDirectorycreaterepo --workers=2 -pdo /var/www/html/HDP-UTILS-1.1.0.21 /var/www/html/HDP-UTILS-1.1.0.21 -c /tmp/HDP-UTILS-1.1.0.21 -v 解释一下createrepo命令： 12345-p 以漂亮的格式输出xml-d 使用sqlite存储生成的元数据，默认项-o 指定元数据的输出位置-c 指定缓存目录，缓存软件仓库中软件包的校验和信息-v 以详细模式输出 启动http服务 启动服务以供其他机器访问1/etc/init.d/httpd restart 创建客户端使用的repo文件12345678cat /etc/yum.repos.d/HDP-UTILS.repo &lt;&lt;EOF #VERSION_NUMBER=1.1.0.21 [HDP-UTILS-1.1.0.21] name=HDP-UTILS-1.1.0.21 baseurl=http://local.network.domain/HDP-UTILS-1.1.0.21/ gpgcheck=0 enabled=1EOF 访问测试 浏览器访问[http://local.network.domain/HDP-UTILS-1.1.0.21/] 客户端服务器使用命令 yum repolist|grep &quot;HDP-UTILS-1.1.0.21&quot; 看能否获取到正确的repo和文件数量","tags":[{"name":"repo仓库","slug":"repo仓库","permalink":"http://finsos.github.io/tags/repo仓库/"}],"categories":[{"name":"运维记录","slug":"运维记录","permalink":"http://finsos.github.io/categories/运维记录/"},{"name":"Linux","slug":"运维记录/Linux","permalink":"http://finsos.github.io/categories/运维记录/Linux/"}]},{"title":"写在第一篇文章的话","date":"2018-01-19T15:23:44.000Z","path":"wiki/写在第一篇文章的话/","text":"博客开张了，The first blood还是要贡献一下，接触博客好多，今天算是第一次完全搭建属于自己的个人博客，也是无意间接触到GitHub Pages，觉得很方便，而且完美支持Markdown，就这么选好模板入坑了。 写在第一篇文章的话这个博客，主要是用于记录自己的学习过程，以及工作中所踩的一些新坑，包括自己脑子记不住的知识点(大家都懂的^_^)! 其实偶尔也会有一些自己的心情体会发表一下，主要是吐槽啦~ 为什么开博客 希望养成良好的个人习惯 技术更新迭代很快，对我这种战5渣的冲击力太大，必须时刻提醒自己要思（挣）考（钱）！要学（高）习（薪）！ 不定时更新，自己满足就好，当然，如果文章中有涉及到可以帮助大家的知识点，我也是很开心啦啦啦~ 我是什么人 目前一名普通的Linux运维（民工） 接触了一些貌似高大山的东西，消息队列、分布式计算、分布式存储、虚拟化、自动化运维、DevOps 等等 对于上面那些平时光说，光听，实际原理其实并没有吃透，纯粹操作一点，学会一点，其实然并卵。 本篇完 有点晚了，需要睡觉了，想起来再说。","tags":[],"categories":[{"name":"文笔随记","slug":"文笔随记","permalink":"http://finsos.github.io/categories/文笔随记/"},{"name":"心情","slug":"文笔随记/心情","permalink":"http://finsos.github.io/categories/文笔随记/心情/"}]}]}